{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n# Initialize the VEX V5 Brain and Controller\nbrain = vex.Brain()\ncontroller = vex.Controller()\n\n# Initialize motors for the drivetrain\n# Assuming the motors are plugged into ports 1, 2, 3, and 4\nmotor_left_front = vex.Motor(vex.Ports.PORT1, vex.GearSetting.RATIO_18_1)\nmotor_left_rear = vex.Motor(vex.Ports.PORT2, vex.GearSetting.RATIO_18_1)\nmotor_right_front = vex.Motor(vex.Ports.PORT3, vex.GearSetting.RATIO_18_1, True)  # Reverse motor direction\nmotor_right_rear = vex.Motor(vex.Ports.PORT4, vex.GearSetting.RATIO_18_1, True)  # Reverse motor direction\n\ndrivetrain = DriveTrain(left_motor, right_motor, 319.19, 295, 40, MM, 1)\n\n# Initialize the drivetrain with a 5:3 gear ratio\n# Assuming the wheels have a diameter of 4 inches\nwheel_diameter = 4\ngear_ratio = 5 / 3\n\n# Create the drivetrain\ndrivetrain = vex.Drivetrain(\n    vex.MotorGroup(motor_left_front, motor_left_rear),\n    vex.MotorGroup(motor_right_front, motor_right_rear),\n    wheel_diameter,\n    gear_ratio\n)\n\n# Main loop to control the robot\nwhile True:\n    # Get the values from the controller joysticks\n    left_speed = controller.axis3.position()\n    right_speed = controller.axis2.position()\n\n    # Set the drivetrain speed\n    drivetrain.drive(left_speed, right_speed)\n\n    # Small delay to avoid CPU overload\n    vex.sleep(20)\n\n","textLanguage":"python","robotConfig":[],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}